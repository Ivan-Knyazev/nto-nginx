
server {

    listen 10102 ssl;
    # listen [::]:10102;

    server_name service1.ntv3.ru;

    ssl_certificate        /etc/ssl/ntv3.crt;
    ssl_certificate_key    /etc/ssl/ntv3.key;

    # ssl_session_cache   shared:SSL:2m;
    # ssl_session_timeout 24h;

    location / {

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        proxy_pass http://pgadmin;


        # set $cors '';
        # if ($http_origin ~ '^https?://(localhost|lapsoft\.mooo\.com)') {
        #         set $cors 'true';
        # }

        # if ($cors = 'true') {
        #         add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #         add_header 'Access-Control-Allow-Credentials' 'true' always;
        #         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #         add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        #         # required to be able to read Authorization header in frontend
        #         #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        # }

        # if ($request_method = 'OPTIONS') {
        #         # Tell client that this pre-flight info is valid for 20 days
        #         add_header 'Access-Control-Max-Age' 1728000;
        #         add_header 'Content-Type' 'text/plain charset=UTF-8';
        #         add_header 'Content-Length' 0;
        #         return 204;
        # }
    }

}


# server {
#      listen 10103;
#      server_name lapsoft.mooo.com;
#      return 301 https://$host:10103;
#     #  return 301 https://$host$request_uri;
# }
